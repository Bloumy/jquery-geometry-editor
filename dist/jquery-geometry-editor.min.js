!function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){(function(c){var d=a("./util/guid.js"),e=a("./defaultParams.js"),f=a("./util/featureCollectionToGeometry.js"),g=a("./util/geometryToSimpleGeometries"),h=a("./geometryType/isSingleGeometryType.js"),i="undefined"!=typeof window?window.L:"undefined"!=typeof c?c.L:null,j="undefined"!=typeof window?window.L.Control.Draw:"undefined"!=typeof c?c.L.Control.Draw:null,k=function(a,b){this.dataElement=a,this.settings=$.extend(e,b),this.map=this.initMap(),this.initDrawLayer(),this.settings.editable&&this.initDrawControls(),this.settings.hide&&this.dataElement.hide()};k.prototype.initMap=function(){var a="map-"+d(),b=$('<div id="'+a+'"></div>');b.addClass("map"),b.css("width",this.settings.width),b.css("height",this.settings.height),b.insertAfter(this.dataElement);var c=i.map(a).setView([this.settings.lat,this.settings.lon],this.settings.zoom);for(var e in this.settings.tileLayers){var f=this.settings.tileLayers[e];i.tileLayer(f.url,{attribution:f.attribution,maxZoom:18}).addTo(c)}return c},k.prototype.isDataElementAnInput=function(){return"undefined"!=typeof this.dataElement.attr("value")},k.prototype.getRawData=function(){return this.isDataElementAnInput()?$.trim(this.dataElement.val()):$.trim(this.dataElement.html())},k.prototype.setRawData=function(a){this.isDataElementAnInput()?this.dataElement.val(a):this.dataElement.html(a),this.dataElement.trigger("change")},k.prototype.setGeometry=function(a){this.drawLayer.clearLayers();var b=g(a),c=this;i.geoJson(b,{onEachFeature:function(a,b){c.drawLayer.addLayer(b)}}),0!==b.length&&this.map.fitBounds(this.drawLayer.getBounds()),this.serializeGeometry()},k.prototype.initDrawLayer=function(){this.drawLayer=i.featureGroup().addTo(this.map);var a=this.getRawData();if(""!==a){var b=JSON.parse(a);this.setGeometry(b)}},k.prototype.getGeometryType=function(){return this.settings.geometryType},k.prototype.canEdit=function(a){return"Geometry"===this.getGeometryType()?!0:"GeometryCollection"===this.getGeometryType()?!0:-1!==this.getGeometryType().indexOf(a)?!0:!1},k.prototype.initDrawControls=function(){var a={draw:{position:"topleft",marker:this.canEdit("Point"),polyline:this.canEdit("LineString"),polygon:this.canEdit("Polygon"),rectangle:this.canEdit("Polygon"),circle:!1},edit:{featureGroup:this.drawLayer}},b=new j(a);this.map.addControl(b);var c=this;this.map.on("draw:created",function(a){h(c.getGeometryType())&&c.drawLayer.clearLayers(),c.drawLayer.addLayer(a.layer),c.serializeGeometry()}),this.map.on("draw:deleted",function(a){c.serializeGeometry()}),this.map.on("draw:edited",function(a){c.serializeGeometry()})},k.prototype.serializeGeometry=function(){var a=this.drawLayer.toGeoJSON(),b=f(a);b?this.setRawData(JSON.stringify(b)):this.setRawData("")},b.exports=k}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./defaultParams.js":2,"./geometryType/isSingleGeometryType.js":3,"./util/featureCollectionToGeometry.js":4,"./util/geometryToSimpleGeometries":6,"./util/guid.js":7}],2:[function(a,b,c){var d={tileLayers:[{url:"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",attribution:'Map data Â© <a href="http://openstreetmap.org">OpenStreetMap</a> contributors'}],hide:!0,editable:!0,width:"100%",height:"500",lon:2,lat:45,zoom:4,geometryType:"Geometry"};b.exports=d},{}],3:[function(a,b,c){var d=function(a){return-1!==["Point","LineString","Polygon"].indexOf(a)};b.exports=d},{}],4:[function(a,b,c){var d=a("./geometriesToCollection.js"),e=function(a){var b=[];return a.features.forEach(function(a){b.push(a.geometry)}),0===b.length?null:1==b.length?b[0]:d(b)};b.exports=e},{"./geometriesToCollection.js":5}],5:[function(a,b,c){var d=function(a){var b={};a.forEach(function(a){"undefined"==typeof b[a.type]?b[a.type]=1:b[a.type]++});var c=Object.keys(b);if(c.length>1)return{type:"GeometryCollection",geometries:a};var d="Multi"+Object.keys(b)[0],e=[];return a.forEach(function(a){e.push(a.coordinates)}),{type:d,coordinates:e}};b.exports=d},{}],6:[function(a,b,c){var d=function(a){var b=[],c=a.type.substring("Multi".length);return a.coordinates.forEach(function(a){b.push({type:c,coordinates:a})}),b},e=function(a){var b=[];return a.geometries.forEach(function(a){b.push(a)}),b},f=function(a){switch(a.type){case"Point":case"LineString":case"Polygon":return[a];case"MultiPoint":case"MultiLineString":case"MultiPolygon":return d(a);case"GeometryCollection":return e(a);default:throw"unsupported geometry type : "+a.type}};b.exports=f},{}],7:[function(a,b,c){var d=function(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()};b.exports=d},{}],8:[function(a,b,c){(function(b){var c="undefined"!=typeof window?window.jQuery:"undefined"!=typeof b?b.jQuery:null,d={defaultParams:a("./ge/defaultParams"),GeometryEditor:a("./ge/GeometryEditor")};c.fn.geometryEditor=function(a){return this.each(function(){var b=new d.GeometryEditor($(this),a);$(this).data("editor",b)})},b.ge=d}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./ge/GeometryEditor":1,"./ge/defaultParams":2}]},{},[8]);